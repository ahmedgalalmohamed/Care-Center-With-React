{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alahram\\\\Downloads\\\\MyGitHub\\\\Temp\\\\frontend\\\\src\\\\components\\\\DoctAss.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { Fragment, useEffect, useState } from \"react\"; //to use function to get information  and useState to store data\n\nimport { Table, Button, Alert, Container } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DoctAss() {\n  _s();\n\n  const [doctors, setdoctor] = useState([]);\n  var count = 1;\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/doctorAss\", {\n      withCredentials: true\n    }).then(res => {\n      setdoctor(res.data.drassigmnent.dr);\n    }).catch(err => console.log(err));\n  }, []);\n\n  function DeleteDoctor(e) {\n    e.preventDefault();\n    const id = e.target.id;\n    axios.post('http://localhost:4000/doctorDelete', {\n      id: id\n    }, {\n      withCredentials: true\n    }).then(res => {\n      console.log(res.data);\n      window.location.href = '/doctorAPP';\n    }).catch(err => console.log(err));\n  }\n\n  function funcomponent() {\n    if (doctors.length > 0) {\n      return /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Num\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time Booking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: count++\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: doctor.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: doctor._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: doctor.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: doctor.datenow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                id: doctor._id,\n                onClick: DeleteDoctor,\n                variant: \"danger\",\n                children: [\" Delete \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTrashAlt\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 109\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)]\n          }, Math.random(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          children: /*#__PURE__*/_jsxDEV(Alert.Heading, {\n            children: \"Doctor Is Empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: funcomponent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DoctAss, \"u57kJRktedaNDYMiwP3oVjhA8VE=\");\n\n_c = DoctAss;\nexport default DoctAss;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctAss\");","map":{"version":3,"sources":["C:/Users/Alahram/Downloads/MyGitHub/Temp/frontend/src/components/DoctAss.js"],"names":["axios","Fragment","useEffect","useState","Table","Button","Alert","Container","FontAwesomeIcon","faTrashAlt","DoctAss","doctors","setdoctor","count","get","withCredentials","then","res","data","drassigmnent","dr","catch","err","console","log","DeleteDoctor","e","preventDefault","id","target","post","window","location","href","funcomponent","length","map","doctor","name","_id","email","datenow","Math","random"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { Fragment, useEffect, useState } from \"react\"; //to use function to get information  and useState to store data\r\nimport { Table, Button, Alert, Container } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction DoctAss() {\r\n    const [doctors, setdoctor] = useState([]);\r\n    var count = 1;\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:4000/doctorAss\", { withCredentials: true })\r\n            .then(res => {\r\n                setdoctor(res.data.drassigmnent.dr);\r\n            }).catch(err => console.log(err));\r\n    }, [])\r\n\r\n    function DeleteDoctor(e) {\r\n        e.preventDefault();\r\n        const id = e.target.id;\r\n        axios.post('http://localhost:4000/doctorDelete', { id: id }, { withCredentials: true })\r\n            .then(res => {\r\n                console.log(res.data);\r\n                window.location.href = '/doctorAPP';\r\n            }).catch(err => console.log(err));\r\n    }\r\n    function funcomponent() {\r\n        if (doctors.length > 0) {\r\n            return (\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Num</th>\r\n                            <th>Name</th>\r\n                            <th>Phone Number</th>\r\n                            <th>Email</th>\r\n                            <th>Time Booking</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {doctors.map((doctor) => (\r\n                            <tr key={Math.random()}>\r\n                                <td>{count++}</td>\r\n                                <td>{doctor.name}</td>\r\n                                <td>{doctor._id}</td>\r\n                                <td>{doctor.email}</td>\r\n                                <td>{doctor.datenow}</td>\r\n                                <td><Button id={doctor._id} onClick={DeleteDoctor} variant=\"danger\"> Delete <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon></Button></td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )\r\n        } else {\r\n            return (\r\n                <Container>\r\n                    <Alert>\r\n                    <Alert.Heading>Doctor Is Empty</Alert.Heading>\r\n                  \r\n                    </Alert>\r\n                </Container>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {funcomponent()}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DoctAss;"]},"metadata":{},"sourceType":"module"}