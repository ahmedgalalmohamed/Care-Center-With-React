{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alahram\\\\Downloads\\\\MyGitHub\\\\Temp\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Fragment, useEffect, useState } from \"react\"; //to use function to get information  and useState to store data\n\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from \"react-router-dom\";\nimport { Navigation, Home, Contact, SignUp, SignIn, Doctprofile, Logout, DoctAss } from \"./components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let history = useNavigate();\n  const [isauthenticated, setisauthenticated] = use;\n  state = {\n    isauthenticated: false,\n    username: '',\n    countdrassignment: 0,\n    countalldoctor: 0\n  };\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/signin\", {\n      withCredentials: true\n    }).then(res => this.setState({\n      isauthenticated: res.data.isauthenticated,\n      username: res.data.username,\n      countdrassignment: res.data.countdrassignment,\n      countalldoctor: res.data.countalldoctor\n    })).catch(error => console.log(error));\n  }); //#region  Routers\n\n  function RouterDocAss() {\n    if (this.state.isauthenticated) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/doctorAPP\",\n        element: /*#__PURE__*/_jsxDEV(DoctAss, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    } else {\n      return null;\n    }\n  }\n\n  function RouterHome() {\n    if (true) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function RouterLogout() {\n    if (this.state.isauthenticated) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/logout\",\n        element: /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/logout\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function RouterSignUp() {\n    if (!this.state.isauthenticated) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Doctprofile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function RouterSignIn() {\n    if (!this.state.isauthenticated) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signin\",\n        element: /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signin\",\n        element: /*#__PURE__*/_jsxDEV(Doctprofile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function RouterContact() {\n    if (true) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        element: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function RouterDoctprofile() {\n    if (this.state.isauthenticated) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/doctorNotAPP\",\n        element: /*#__PURE__*/_jsxDEV(Doctprofile, {\n          countalldoctor: this.state.countalldoctor,\n          countdrassignment: this.state.countdrassignment,\n          isauthenticated: this.state.isauthenticated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this);\n    } else {\n      return null;\n    }\n  } //#endregion\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        countalldoctor: this.state.countalldoctor,\n        countdrassignment: this.state.countdrassignment,\n        isauthenticated: this.state.isauthenticated,\n        username: this.state.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [RouterHome(), RouterSignUp(), RouterContact(), RouterDoctprofile(), RouterSignIn(), RouterLogout(), RouterDocAss()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Y7PDyvgKWfrrW9fghdXTUSun984=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Alahram/Downloads/MyGitHub/Temp/frontend/src/App.js"],"names":["React","axios","Fragment","useEffect","useState","BrowserRouter","Router","Route","Routes","useNavigate","Navigation","Home","Contact","SignUp","SignIn","Doctprofile","Logout","DoctAss","App","history","isauthenticated","setisauthenticated","use","state","username","countdrassignment","countalldoctor","get","withCredentials","then","res","setState","data","catch","error","console","log","RouterDocAss","RouterHome","RouterLogout","RouterSignUp","RouterSignIn","RouterContact","RouterDoctprofile"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Fragment, useEffect, useState } from \"react\"; //to use function to get information  and useState to store data\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from \"react-router-dom\";\nimport { Navigation, Home, Contact, SignUp, SignIn, Doctprofile, Logout, DoctAss } from \"./components\";\nfunction App() {\n\n  let history = useNavigate();\n  const [isauthenticated,setisauthenticated] = use\n  state = {\n    isauthenticated: false,\n    username: '',\n    countdrassignment: 0,\n    countalldoctor: 0\n  }\n\n\n\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/signin\", { withCredentials: true })\n      .then(res => this.setState({ isauthenticated: res.data.isauthenticated, username: res.data.username, countdrassignment: res.data.countdrassignment, countalldoctor: res.data.countalldoctor }))\n      .catch(error => console.log(error));\n\n  })\n\n\n\n  //#region  Routers\n  function RouterDocAss() {\n    if (this.state.isauthenticated) {\n      return (\n        <Route exact path=\"/doctorAPP\" element={<DoctAss />} />\n      )\n    }\n    else {\n      return (\n        null\n      )\n    }\n  }\n  function RouterHome() {\n    if (true) {\n      return (\n        <Route exact path=\"/\" element={<Home />} />\n      )\n    }\n  }\n  function RouterLogout() {\n    if (this.state.isauthenticated) {\n      return (\n        <Route exact path=\"/logout\" element={<Logout />} />\n      )\n    }\n    else {\n      return (\n        <Route exact path=\"/logout\" element={<Home />} />\n      )\n    }\n  }\n  function RouterSignUp() {\n    if (!this.state.isauthenticated) {\n      return (\n        <Route path=\"/signup\" element={<SignUp />} />\n      )\n    }\n    else {\n      return (\n        <Route path=\"/signup\" element={<Doctprofile />} />\n      )\n    }\n  }\n  function RouterSignIn() {\n    if (!this.state.isauthenticated) {\n      return (\n        <Route path=\"/signin\" element={<SignIn />} />\n      )\n    }\n    else {\n      return (\n        <Route path=\"/signin\" element={<Doctprofile />} />\n      )\n    }\n  }\n  function RouterContact() {\n    if (true) {\n      return (\n        <Route path=\"/contact\" element={<Contact />} />\n      )\n    }\n  }\n  function RouterDoctprofile() {\n    if (this.state.isauthenticated) {\n      return (\n        <Route path=\"/doctorNotAPP\" element={<Doctprofile countalldoctor={this.state.countalldoctor} countdrassignment={this.state.countdrassignment} isauthenticated={this.state.isauthenticated} />} />\n      )\n    }\n    else {\n      return (\n        null\n      )\n    }\n  }\n  //#endregion\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation countalldoctor={this.state.countalldoctor} countdrassignment={this.state.countdrassignment} isauthenticated={this.state.isauthenticated} username={this.state.username} />\n        <Routes>\n          {RouterHome()}\n          {RouterSignUp()}\n          {RouterContact()}\n          {RouterDoctprofile()}\n          {RouterSignIn()}\n          {RouterLogout()}\n          {RouterDocAss()}\n        </Routes>\n      </Router>\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}