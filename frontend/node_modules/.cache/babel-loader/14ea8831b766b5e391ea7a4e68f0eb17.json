{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alahram\\\\Downloads\\\\MyGitHub\\\\Temp\\\\frontend\\\\src\\\\components\\\\DoctAss.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from \"react\"; //to use function to get information  and useState to store data\n\nimport { Table, Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DoctAss() {\n  _s();\n\n  let history = useNavigate();\n  const [doctors, setdoctor] = useState([]);\n  var count = 1;\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/doctorAss\", {\n      withCredentials: true\n    }).then(res => {\n      setdoctor(res.data.drassigmnent.dr);\n    }).catch(err => console.log(err));\n  }, []);\n\n  function DeleteDoctor(e) {\n    e.preventDefault();\n    const id = e.target.id;\n    axios.post('http://localhost:4000/doctorDelete', {\n      id: id\n    }, {\n      withCredentials: true\n    }).then(res => {\n      console.log(res.data);\n      window.location.href = '/doctorNotAPP';\n      window.location.reload(false);\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Num\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Time Booking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: count++\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: doctor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: doctor._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: doctor.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: doctor.datenow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: doctor._id,\n            onClick: DeleteDoctor,\n            variant: \"danger\",\n            children: [\" Delete \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTrashAlt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 101\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, Math.random(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DoctAss, \"E9OP5CppauQBMBhNchRuXtszTzM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = DoctAss;\nexport default DoctAss;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctAss\");","map":{"version":3,"sources":["C:/Users/Alahram/Downloads/MyGitHub/Temp/frontend/src/components/DoctAss.js"],"names":["axios","useNavigate","useEffect","useState","Table","Button","FontAwesomeIcon","faTrashAlt","DoctAss","history","doctors","setdoctor","count","get","withCredentials","then","res","data","drassigmnent","dr","catch","err","console","log","DeleteDoctor","e","preventDefault","id","target","post","window","location","href","reload","map","doctor","name","_id","email","datenow","Math","random"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useEffect, useState } from \"react\"; //to use function to get information  and useState to store data\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction DoctAss() {\r\n    let history = useNavigate();\r\n    const [doctors, setdoctor] = useState([]);\r\n    var count = 1;\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:4000/doctorAss\", { withCredentials: true })\r\n            .then(res => {\r\n                setdoctor(res.data.drassigmnent.dr);\r\n            }).catch(err => console.log(err));\r\n    }, [])\r\n\r\n    function DeleteDoctor(e) {\r\n        e.preventDefault();\r\n        const id = e.target.id;\r\n        axios.post('http://localhost:4000/doctorDelete', { id: id }, { withCredentials: true })\r\n            .then(res => {\r\n                console.log(res.data);\r\n                window.location.href = '/doctorNotAPP';\r\n                window.location.reload(false);\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <th>Num</th>\r\n                    <th>Name</th>\r\n                    <th>Phone Number</th>\r\n                    <th>Email</th>\r\n                    <th>Time Booking</th>\r\n                    <th>Delete</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {doctors.map((doctor) => (\r\n                    <tr key={Math.random()}>\r\n                        <td>{count++}</td>\r\n                        <td>{doctor.name}</td>\r\n                        <td>{doctor._id}</td>\r\n                        <td>{doctor.email}</td>\r\n                        <td>{doctor.datenow}</td>\r\n                        <td><Button id={doctor._id} onClick={DeleteDoctor} variant=\"danger\"> Delete <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon></Button></td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default DoctAss;"]},"metadata":{},"sourceType":"module"}