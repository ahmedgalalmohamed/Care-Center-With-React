{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alahram\\\\Downloads\\\\MyGitHub\\\\Temp\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\"; //to use function to get information  and useState to store data\n\nimport { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\nimport { Navigation, Home, Contact, SignUp, SignIn, DoctInfo, Logout, DoctAss, Profileusers, Profiledoctor } from \"./components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isauthenticated, setisauthenticated] = useState(false);\n  const [username, setusername] = useState('');\n  const [countdrassignment, setcountdrassignment] = useState(0);\n  const [countalldoctor, setcountalldoctor] = useState(0);\n  useEffect(() => {\n    fetchMyAPI();\n  });\n\n  async function fetchMyAPI() {\n    await axios.get(\"http://localhost:4000/signin\", {\n      withCredentials: true\n    }).then(res => {\n      setisauthenticated(res.data.isauthenticated);\n      setusername(res.data.username);\n      setcountdrassignment(res.data.countdrassignment);\n      setcountalldoctor(res.data.countalldoctor);\n    }).catch(error => console.log(error));\n  } //#region  Routers\n\n\n  function RouterProfiledoctor() {\n    if (isauthenticated) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/doctorprofile/:doctorid\",\n        element: /*#__PURE__*/_jsxDEV(Profiledoctor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/doctorprofile/:doctorid\",\n        element: /*#__PURE__*/_jsxDEV(Navigation, {\n          replace: true,\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function RouterDocAss() {\n    if (isauthenticated) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/doctorAPP\",\n        element: /*#__PURE__*/_jsxDEV(DoctAss, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function RouterProfileusers() {\n    if (isauthenticated) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/userprofile\",\n        element: /*#__PURE__*/_jsxDEV(Profileusers, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function RouterHome() {\n    if (true) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function RouterLogout() {\n    if (isauthenticated) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/logout\",\n        element: /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/logout\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          replace: true,\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function RouterSignUp() {\n    if (!isauthenticated) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          replace: true,\n          to: \"/doctorAPP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function RouterSignIn() {\n    if (!isauthenticated) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signin\",\n        element: /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signin\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          replace: true,\n          to: \"/doctorAPP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function RouterContact() {\n    if (true) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        element: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function RouterDoctInfo() {\n    if (isauthenticated) {} else {}\n\n    switch (isauthenticated) {\n      case true:\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/doctorNotAPP\",\n          element: /*#__PURE__*/_jsxDEV(DoctInfo, {\n            countalldoctor: countalldoctor,\n            countdrassignment: countdrassignment,\n            isauthenticated: isauthenticated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this);\n        break;\n\n      case false:\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/doctorNotAPP\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            replace: true,\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this);\n        break;\n\n      default:\n        break;\n    }\n  } //#endregion\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        countalldoctor: countalldoctor,\n        countdrassignment: countdrassignment,\n        isauthenticated: isauthenticated,\n        username: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [RouterHome(), RouterSignUp(), RouterContact(), RouterDoctInfo(), RouterSignIn(), RouterLogout(), RouterDocAss(), RouterProfileusers(), RouterProfiledoctor()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Gs4E0qYGA8ZfKqQQsZKMlZi9MO4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Alahram/Downloads/MyGitHub/Temp/frontend/src/App.js"],"names":["axios","useEffect","useState","BrowserRouter","Router","Route","Routes","Navigate","Navigation","Home","Contact","SignUp","SignIn","DoctInfo","Logout","DoctAss","Profileusers","Profiledoctor","App","isauthenticated","setisauthenticated","username","setusername","countdrassignment","setcountdrassignment","countalldoctor","setcountalldoctor","fetchMyAPI","get","withCredentials","then","res","data","catch","error","console","log","RouterProfiledoctor","RouterDocAss","RouterProfileusers","RouterHome","RouterLogout","RouterSignUp","RouterSignIn","RouterContact","RouterDoctInfo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAA6C;;AAC7C,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,QAAjD,QAAiE,kBAAjE;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,OAA3B,EAAoCC,MAApC,EAA4CC,MAA5C,EAAoDC,QAApD,EAA8DC,MAA9D,EAAsEC,OAAtE,EAA+EC,YAA/E,EAA6FC,aAA7F,QAAkH,cAAlH;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqB,iBAAD,EAAoBC,oBAApB,IAA4CtB,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM,CAACuB,cAAD,EAAiBC,iBAAjB,IAAsCxB,QAAQ,CAAC,CAAD,CAApD;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,UAAU;AACX,GAFQ,CAAT;;AAIA,iBAAeA,UAAf,GAA4B;AAC1B,UAAM3B,KAAK,CAAC4B,GAAN,CAAU,8BAAV,EAA0C;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAA1C,EACFC,IADE,CACGC,GAAG,IAAI;AACXX,MAAAA,kBAAkB,CAACW,GAAG,CAACC,IAAJ,CAASb,eAAV,CAAlB;AACAG,MAAAA,WAAW,CAACS,GAAG,CAACC,IAAJ,CAASX,QAAV,CAAX;AACAG,MAAAA,oBAAoB,CAACO,GAAG,CAACC,IAAJ,CAAST,iBAAV,CAApB;AACAG,MAAAA,iBAAiB,CAACK,GAAG,CAACC,IAAJ,CAASP,cAAV,CAAjB;AACD,KANE,EAMAQ,KANA,CAMMC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CANf,CAAN;AAOA,GApBW,CAsBb;;;AACA,WAASG,mBAAT,GAA+B;AAC7B,QAAIlB,eAAJ,EAAqB;AACnB,0BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,0BAAlB;AAA6C,QAAA,OAAO,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJD,MAKK;AACH,0BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,0BAAlB;AAA6C,QAAA,OAAO,eAAE,QAAC,UAAD;AAAY,UAAA,OAAO,MAAnB;AAAoB,UAAA,EAAE,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF;;AACD,WAASmB,YAAT,GAAwB;AACtB,QAAInB,eAAJ,EAAqB;AACnB,0BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,YAAlB;AAA+B,QAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF;;AACD,WAASoB,kBAAT,GAA8B;AAC5B,QAAIpB,eAAJ,EAAqB;AACnB,0BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,cAAlB;AAAiC,QAAA,OAAO,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF;;AACD,WAASqB,UAAT,GAAsB;AACpB,QAAI,IAAJ,EAAU;AACR,0BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF;;AACD,WAASC,YAAT,GAAwB;AACtB,QAAItB,eAAJ,EAAqB;AACnB,0BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,SAAlB;AAA4B,QAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJD,MAKK;AACH,0BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,OAAO,eAAE,QAAC,QAAD;AAAU,UAAA,OAAO,MAAjB;AAAkB,UAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF;;AACD,WAASuB,YAAT,GAAwB;AACtB,QAAI,CAACvB,eAAL,EAAsB;AACpB,0BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJD,MAKK;AACH,0BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,OAAO,eAAE,QAAC,QAAD;AAAU,UAAA,OAAO,MAAjB;AAAkB,UAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF;;AACD,WAASwB,YAAT,GAAwB;AACtB,QAAI,CAACxB,eAAL,EAAsB;AACpB,0BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJD,MAKK;AACH,0BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,OAAO,eAAE,QAAC,QAAD;AAAU,UAAA,OAAO,MAAjB;AAAkB,UAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF;;AACD,WAASyB,aAAT,GAAyB;AACvB,QAAI,IAAJ,EAAU;AACR,0BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF;;AACD,WAASC,cAAT,GAA0B;AACxB,QAAI1B,eAAJ,EAAqB,CAEpB,CAFD,MAGK,CAEJ;;AACD,YAAQA,eAAR;AACE,WAAK,IAAL;AACE,4BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,eAAZ;AAA4B,UAAA,OAAO,eAAE,QAAC,QAAD;AAAU,YAAA,cAAc,EAAEM,cAA1B;AAA0C,YAAA,iBAAiB,EAAEF,iBAA7D;AAAgF,YAAA,eAAe,EAAEJ;AAAjG;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,gBADF;AAGA;;AACA,WAAK,KAAL;AACE,4BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,eAAZ;AAA4B,UAAA,OAAO,eAAE,QAAC,QAAD;AAAU,YAAA,OAAO,MAAjB;AAAkB,YAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,gBADF;AAGA;;AACJ;AACE;AAZJ;AAcD,GAxHY,CAyHb;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,cAAc,EAAEM,cAA5B;AAA4C,QAAA,iBAAiB,EAAEF,iBAA/D;AAAkF,QAAA,eAAe,EAAEJ,eAAnG;AAAoH,QAAA,QAAQ,EAAEE;AAA9H;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,mBACGmB,UAAU,EADb,EAEGE,YAAY,EAFf,EAGGE,aAAa,EAHhB,EAIGC,cAAc,EAJjB,EAKGF,YAAY,EALf,EAMGF,YAAY,EANf,EAOGH,YAAY,EAPf,EAQGC,kBAAkB,EARrB,EASGF,mBAAmB,EATtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA7IQnB,G;;KAAAA,G;AA8IT,eAAeA,GAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\"; //to use function to get information  and useState to store data\nimport { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\nimport { Navigation, Home, Contact, SignUp, SignIn, DoctInfo, Logout, DoctAss, Profileusers, Profiledoctor } from \"./components\";\nfunction App() {\n  const [isauthenticated, setisauthenticated] = useState(false);\n  const [username, setusername] = useState('');\n  const [countdrassignment, setcountdrassignment] = useState(0);\n  const [countalldoctor, setcountalldoctor] = useState(0);\n\n\n\n  useEffect(() => {\n    fetchMyAPI();\n  })\n\n  async function fetchMyAPI() {\n    await axios.get(\"http://localhost:4000/signin\", { withCredentials: true })\n       .then(res => {\n         setisauthenticated(res.data.isauthenticated);\n         setusername(res.data.username);\n         setcountdrassignment(res.data.countdrassignment);\n         setcountalldoctor(res.data.countalldoctor);\n       }).catch(error => console.log(error));\n   }\n\n  //#region  Routers\n  function RouterProfiledoctor() {\n    if (isauthenticated) {\n      return (\n        <Route exact path=\"/doctorprofile/:doctorid\" element={<Profiledoctor />} />\n      )\n    }\n    else {\n      return(\n        <Route exact path=\"/doctorprofile/:doctorid\" element={<Navigation replace to=\"/\"/>} />\n      )\n    }\n  }\n  function RouterDocAss() {\n    if (isauthenticated) {\n      return (\n        <Route exact path=\"/doctorAPP\" element={<DoctAss />} />\n      )\n    }\n  }\n  function RouterProfileusers() {\n    if (isauthenticated) {\n      return (\n        <Route exact path=\"/userprofile\" element={<Profileusers />} />\n      )\n    }\n  }\n  function RouterHome() {\n    if (true) {\n      return (\n        <Route exact path=\"/\" element={<Home />} />\n      )\n    }\n  }\n  function RouterLogout() {\n    if (isauthenticated) {\n      return (\n        <Route exact path=\"/logout\" element={<Logout />} />\n      )\n    }\n    else {\n      return (\n        <Route path=\"/logout\" element={<Navigate replace to=\"/\" />} />\n      )\n    }\n  }\n  function RouterSignUp() {\n    if (!isauthenticated) {\n      return (\n        <Route path=\"/signup\" element={<SignUp />} />\n      )\n    }\n    else {\n      return (\n        <Route path=\"/signup\" element={<Navigate replace to=\"/doctorAPP\" />} />\n      )\n    }\n  }\n  function RouterSignIn() {\n    if (!isauthenticated) {\n      return (\n        <Route path=\"/signin\" element={<SignIn />} />\n      )\n    }\n    else {\n      return (\n        <Route path=\"/signin\" element={<Navigate replace to=\"/doctorAPP\" />} />\n      )\n    }\n  }\n  function RouterContact() {\n    if (true) {\n      return (\n        <Route path=\"/contact\" element={<Contact />} />\n      )\n    }\n  }\n  function RouterDoctInfo() {\n    if (isauthenticated) {\n     \n    }\n    else {\n      \n    }\n    switch (isauthenticated) {\n      case true:\n        return (\n          <Route path=\"/doctorNotAPP\" element={<DoctInfo countalldoctor={countalldoctor} countdrassignment={countdrassignment} isauthenticated={isauthenticated} />} />\n        )\n        break;\n        case false:\n          return (\n            <Route path=\"/doctorNotAPP\" element={<Navigate replace to=\"/\" />} />\n          )\n          break;\n      default:\n        break;\n    }\n  }\n  //#endregion\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation countalldoctor={countalldoctor} countdrassignment={countdrassignment} isauthenticated={isauthenticated} username={username} />\n        <Routes>\n          {RouterHome()}\n          {RouterSignUp()}\n          {RouterContact()}\n          {RouterDoctInfo()}\n          {RouterSignIn()}\n          {RouterLogout()}\n          {RouterDocAss()}\n          {RouterProfileusers()}\n          {RouterProfiledoctor()}\n        </Routes>\n      </Router>\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}