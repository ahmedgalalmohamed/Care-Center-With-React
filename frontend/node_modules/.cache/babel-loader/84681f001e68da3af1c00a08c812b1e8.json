{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alahram\\\\Downloads\\\\MyGitHub\\\\Temp\\\\frontend\\\\src\\\\components\\\\Doctprofile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\"; //to use function to get information  and useState to store data\n\nimport { useNavigate } from 'react-router-dom';\nimport './Doctprofile.css'; //to css file\n\nimport axios from \"axios\"; //to get data API\n\nimport { Card, Container, Row, Table, Button } from \"react-bootstrap\"; //bootstrap\n\nimport 'bootstrap/dist/css/bootstrap.min.css'; //bootstrap\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; //bootstrap\n\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'; //bootstrap\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Doctprofile(props) {\n  _s();\n\n  const [person, setperson] = useState(Array); //to store data from DataBase NodeJs\n\n  let history = useNavigate(); //#region to get data from DataBase NodeJs\n\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/doctorNotAss\", {\n      withCredentials: true\n    }).then(res => {\n      console.log(res.data);\n      setperson(res.data.dr);\n    }).catch(err => console.log(err));\n  }, []); //#endregion\n  //#region to erase doctor from display\n\n  function deletedoct(e) {\n    e.preventDefault();\n    const str = e.target.id;\n    const id = str.split(',')[0];\n    const name = str.split(',')[1];\n    const email = str.split(',')[2];\n\n    if (id != \"\" || name != \"\" || email != \"\") {\n      axios.post('http://localhost:4000/addlistdr', {\n        id: id,\n        name: name,\n        email: email\n      }, {\n        withCredentials: true\n      }).then(res => {\n        if (res.data == 'IsNotsAuthenticated') {\n          history('/');\n        } else {\n          window.location.reload();\n        }\n      }).catch(err => console.log(err));\n    }\n  } //#endregion\n\n\n  function funcomponent() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: person.map(user => /*#__PURE__*/_jsxDEV(Row, {\n        className: \"row\",\n        children: user.map(users => /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '25rem',\n            padding: '0px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: process.env.PUBLIC_URL + '/dr1.jpg'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            style: {\n              margin: '5px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Dr.Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: users.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Dr.Specialised\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: users.specialised\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Dr.Home Work\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: users.hourwork\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            title: \"Is You Want To Add Doctor\",\n            className: \"btnadd\",\n            id: [users._id, users.name, users.email],\n            onClick: deletedoct,\n            variant: \"success\",\n            children: \" Add \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this)]\n        }, Math.random(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this))\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (props.isauthenticated) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: funcomponent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  } //#region Return Components To App Class\n  //#endregion\n\n}\n\n_s(Doctprofile, \"BDPQPHjXByIuLC16q0X+cQq3BJQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Doctprofile;\nexport default Doctprofile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Doctprofile\");","map":{"version":3,"sources":["C:/Users/Alahram/Downloads/MyGitHub/Temp/frontend/src/components/Doctprofile.js"],"names":["React","Fragment","useEffect","useState","useNavigate","axios","Card","Container","Row","Table","Button","FontAwesomeIcon","faPlus","Doctprofile","props","person","setperson","Array","history","get","withCredentials","then","res","console","log","data","dr","catch","err","deletedoct","e","preventDefault","str","target","id","split","name","email","post","window","location","reload","funcomponent","map","user","users","width","padding","process","env","PUBLIC_URL","margin","specialised","hourwork","_id","Math","random","isauthenticated"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD,C,CAA8D;;AAC9D,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,mBAAP,C,CAA2B;;AAC3B,OAAOC,KAAP,MAAkB,OAAlB,C,CAA0B;;AAC1B,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,KAA/B,EAAsCC,MAAtC,QAAoD,iBAApD,C,CAAsE;;AACtE,OAAO,sCAAP,C,CAA8C;;AAC9C,SAASC,eAAT,QAAgC,gCAAhC,C,CAAiE;;AACjE,SAASC,MAAT,QAAuB,mCAAvB,C,CAA2D;;;;AAE3D,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAACc,KAAD,CAApC,CADwB,CACoB;;AAC5C,MAAIC,OAAO,GAAGd,WAAW,EAAzB,CAFwB,CAIxB;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,KAAK,CAACc,GAAN,CAAU,oCAAV,EAAgD;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAAhD,EACKC,IADL,CACUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAT,MAAAA,SAAS,CAACM,GAAG,CAACG,IAAJ,CAASC,EAAV,CAAT;AACH,KAJL,EAIOC,KAJP,CAIaC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAJpB;AAKH,GANQ,EAMN,EANM,CAAT,CALwB,CAYxB;AAEA;;AACA,WAASC,UAAT,CAAoBC,CAApB,EAAuB;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,GAAG,GAAGF,CAAC,CAACG,MAAF,CAASC,EAArB;AACA,UAAMA,EAAE,GAAGF,GAAG,CAACG,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAX;AACA,UAAMC,IAAI,GAAGJ,GAAG,CAACG,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAb;AACA,UAAME,KAAK,GAAGL,GAAG,CAACG,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAd;;AACA,QAAID,EAAE,IAAI,EAAN,IAAYE,IAAI,IAAI,EAApB,IAA0BC,KAAK,IAAI,EAAvC,EAA2C;AACvChC,MAAAA,KAAK,CAACiC,IAAN,CAAW,iCAAX,EAA6C;AAACJ,QAAAA,EAAE,EAACA,EAAJ;AAAOE,QAAAA,IAAI,EAACA,IAAZ;AAAiBC,QAAAA,KAAK,EAACA;AAAvB,OAA7C,EAA4E;AAAEjB,QAAAA,eAAe,EAAE;AAAnB,OAA5E,EACKC,IADL,CACUC,GAAG,IAAI;AACT,YAAIA,GAAG,CAACG,IAAJ,IAAY,qBAAhB,EAAuC;AACnCP,UAAAA,OAAO,CAAC,GAAD,CAAP;AACH,SAFD,MAEO;AACHqB,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;AACJ,OAPL,EAOOd,KAPP,CAOaC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAPpB;AAQH;AACJ,GA/BuB,CAgCxB;;;AACA,WAASc,YAAT,GAAwB;AACpB,wBACI,QAAC,SAAD;AAAA,gBACK3B,MAAM,CAAC4B,GAAP,CAAYC,IAAD,iBACR,QAAC,GAAD;AAAyB,QAAA,SAAS,EAAC,KAAnC;AAAA,kBACKA,IAAI,CAACD,GAAL,CAAUE,KAAD,iBACN,QAAC,IAAD;AAA0B,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,OAAO,EAAE;AAA3B,WAAjC;AAAA,kCACI,QAAC,IAAD,CAAM,GAAN;AAAU,YAAA,OAAO,EAAC,KAAlB;AAAwB,YAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB;AAAtD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,KAAK,EAAE;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAAd;AAAA,mCACI;AAAA,sCACI;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,4BAAKN,KAAK,CAACT;AAAX;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAKI;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,4BAAKS,KAAK,CAACO;AAAX;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,eASI;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,4BAAKP,KAAK,CAACQ;AAAX;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAkBI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,2BAAd;AAA0C,YAAA,SAAS,EAAE,QAArD;AAA+D,YAAA,EAAE,EAAE,CAACR,KAAK,CAACS,GAAP,EAAYT,KAAK,CAACT,IAAlB,EAAwBS,KAAK,CAACR,KAA9B,CAAnE;AAAyG,YAAA,OAAO,EAAER,UAAlH;AAA8H,YAAA,OAAO,EAAC,SAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBJ;AAAA,WAAW0B,IAAI,CAACC,MAAL,EAAX;AAAA;AAAA;AAAA;AAAA,gBADH;AADL,SAAUD,IAAI,CAACC,MAAL,EAAV;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AA8BH;;AACD,MAAI1C,KAAK,CAAC2C,eAAV,EAA2B;AACvB,wBAEI,QAAC,QAAD;AAAA,gBACKf,YAAY;AADjB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAMH,GAPD,MAQK;AACD,WACI,IADJ;AAGH,GA7EuB,CA8ExB;AAEA;;AACH;;GAjFQ7B,W;UAEST,W;;;KAFTS,W;AAmFT,eAAeA,WAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\"; //to use function to get information  and useState to store data\r\nimport { useNavigate } from 'react-router-dom'\r\nimport './Doctprofile.css';//to css file\r\nimport axios from \"axios\";//to get data API\r\nimport { Card, Container, Row, Table, Button } from \"react-bootstrap\";//bootstrap\r\nimport 'bootstrap/dist/css/bootstrap.min.css';//bootstrap\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';//bootstrap\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';//bootstrap\r\n\r\nfunction Doctprofile(props) {\r\n    const [person, setperson] = useState(Array);//to store data from DataBase NodeJs\r\n    let history = useNavigate();\r\n\r\n    //#region to get data from DataBase NodeJs\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:4000/doctorNotAss\", { withCredentials: true })\r\n            .then(res => {\r\n                console.log(res.data);\r\n                setperson(res.data.dr);\r\n            }).catch(err => console.log(err));\r\n    }, [])\r\n    //#endregion\r\n\r\n    //#region to erase doctor from display\r\n    function deletedoct(e) {\r\n        e.preventDefault();\r\n        const str = e.target.id;\r\n        const id = str.split(',')[0];\r\n        const name = str.split(',')[1];\r\n        const email = str.split(',')[2];\r\n        if (id != \"\" || name != \"\" || email != \"\") {\r\n            axios.post('http://localhost:4000/addlistdr',{id:id,name:name,email:email}, { withCredentials: true })\r\n                .then(res => {\r\n                    if (res.data == 'IsNotsAuthenticated') {\r\n                        history('/');\r\n                    } else {\r\n                        window.location.reload();\r\n                    }\r\n                }).catch(err => console.log(err));\r\n        }\r\n    }\r\n    //#endregion\r\n    function funcomponent() {\r\n        return (\r\n            <Container>\r\n                {person.map((user) => (\r\n                    <Row key={Math.random()} className=\"row\">\r\n                        {user.map((users) => (\r\n                            <Card key={Math.random()} style={{ width: '25rem', padding: '0px' }}>\r\n                                <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + '/dr1.jpg'} />\r\n                                <Table style={{ margin: '5px' }}>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>Dr.Name</td>\r\n                                            <td>{users.name}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Dr.Specialised</td>\r\n                                            <td>{users.specialised}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Dr.Home Work</td>\r\n                                            <td>{users.hourwork}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </Table>\r\n                                <Button title=\"Is You Want To Add Doctor\" className={\"btnadd\"} id={[users._id, users.name, users.email]} onClick={deletedoct} variant=\"success\"> Add </Button>\r\n                            </Card>\r\n                        ))}\r\n                    </Row>\r\n                ))}\r\n            </Container>\r\n        )\r\n    }\r\n    if (props.isauthenticated) {\r\n        return (\r\n\r\n            <Fragment>\r\n                {funcomponent()}\r\n            </Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            null\r\n        )\r\n    }\r\n    //#region Return Components To App Class\r\n\r\n    //#endregion\r\n}\r\n\r\nexport default Doctprofile;"]},"metadata":{},"sourceType":"module"}